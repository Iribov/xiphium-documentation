"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6658],{6578:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var r=o(4848),n=o(8453);const i={},s="Hour Registration",c={id:"Projects/HourRegistration",title:"Hour Registration",description:"All worked hours are supposed to be registered in Hour Registration. All Hour Registration records are connected to a Project2 via a ProjectCode2.",source:"@site/docs/Projects/HourRegistration.md",sourceDirName:"Projects",slug:"/Projects/HourRegistration",permalink:"/xiphium-documentation/docs/Projects/HourRegistration",draft:!1,unlisted:!1,editUrl:"https://github.com/Iribov/xiphium-documentation/edit/main/docs/Projects/HourRegistration.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hour Registration Detail",permalink:"/xiphium-documentation/docs/Projects/HR_Detail"},next:{title:"Project1",permalink:"/xiphium-documentation/docs/Projects/Project1"}},a={},d=[];function l(e){const t={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"hour-registration",children:"Hour Registration"}),"\n",(0,r.jsxs)(t.p,{children:["All worked hours are supposed to be registered in Hour Registration. All Hour Registration records are connected to a ",(0,r.jsx)(t.a,{href:"/xiphium-documentation/docs/Projects/Project2",children:"Project2"})," via a ProjectCode2."]}),"\n",(0,r.jsx)(t.p,{children:"The base information of an Hour Registration record are:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Employee Code (who)"}),"\n",(0,r.jsx)(t.li,{children:"Date (when)"}),"\n",(0,r.jsx)(t.li,{children:"ProjectCode2 (what)"}),"\n",(0,r.jsx)(t.li,{children:"Hours (how long)"}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Employee Code"})," facilitates the connection to the ",(0,r.jsx)(t.a,{href:"/xiphium-documentation/docs/Projects/Employee",children:"Employee"})," table."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Hours"})," are divided into Direct and Indirect Hours. They are both summed up to the 'Hours Total' field.\r\n",(0,r.jsx)(t.strong,{children:"Direct hours"})," are the default hours that are supposed to be entered for most projects. They are supposed to represent hours you have worked directly linked to this project.\r\n",(0,r.jsx)(t.strong,{children:"Indirect hours"})," are made up mostly for tissue culture. When you are cutting plants, these are direct hours. When you are doing anything else, these are indirect hours."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"ProjectCode2"})," is divided into 3 fields: ProjectCode2, ProjectCode2_Manual and ProjectCode2_Used. This system is in place so that it is possible to attribute hours manually to another ProjectCode2 than was originally entered (while keeping that history).\r\n",(0,r.jsx)(t.strong,{children:"ProjectCode2"})," is the field where the Employee enters on what Project2 they have worked on. ",(0,r.jsx)(t.strong,{children:"ProjectCode2_Manual"})," can be used by a manager to manually apply the hours to a different Project2 than the Employee originally entered. ",(0,r.jsx)(t.strong,{children:"ProjectCode2_Used"})," is the field that is (supposed to be) used for actually attributing the hours to a Project2. This field contains simple logic: If ProjectCode2_Manual is entered, copy that ProjectCode. Otherwise, copy it from field ProjectCode2."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"ProjectCode2_Used logic:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-4D",children:'If (ProjectCode2_Manual#"")\r\n\tProjectCode2_Used = ProjectCode2_Manual\r\nElse\r\n\tProjectCode2_Used = ProjectCode2\r\nEnd if\n'})})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>c});var r=o(6540);const n={},i=r.createContext(n);function s(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);