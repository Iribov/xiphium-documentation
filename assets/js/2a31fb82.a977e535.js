"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2925],{9775:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var i=t(5893),r=t(1151);const a={title:"Xiphium 2024-W37 update (1 year Git(Hub) aniversary)",authors:["jim"]},s=void 0,d={permalink:"/xiphium-documentation/blog/2024/09/25/Xiphium-W37-Update/Index",editUrl:"https://github.com/Iribov/xiphium-documentation/edit/main/blog/2024-09-25-Xiphium-W37-Update/Index.md",source:"@site/blog/2024-09-25-Xiphium-W37-Update/Index.md",title:"Xiphium 2024-W37 update (1 year Git(Hub) aniversary)",description:"Here is the weekly update of (significant) changes made in Xiphium this week, extracted from Git(Hub).",date:"2024-09-25T00:00:00.000Z",formattedDate:"September 25, 2024",tags:[],readingTime:3.83,hasTruncateMarker:!0,authors:[{name:"Jim Kerver",title:"4D Developer @Iribov",url:"https://github.com/Jim-Kerver",imageURL:"https://github.com/Jim-Kerver.png",key:"jim"}],frontMatter:{title:"Xiphium 2024-W37 update (1 year Git(Hub) aniversary)",authors:["jim"]},unlisted:!1,prevItem:{title:"Xiphium 2024-W38 update",permalink:"/xiphium-documentation/blog/2024/10/02/Xiphium-W38-Update/Index"},nextItem:{title:"Xiphium 2024-W36 update",permalink:"/xiphium-documentation/blog/2024/09/20/Xiphium-W36-Update/Index"}},o={authorsImageUrls:[void 0]},l=[{value:"Dashboard",id:"dashboard",level:2},{value:"TPP",id:"tpp",level:3},{value:"Radio Button",id:"radio-button",level:3},{value:"Action List",id:"action-list",level:2},{value:"Breeding Rights",id:"breeding-rights",level:2},{value:"Crop Loc Year",id:"crop-loc-year",level:2},{value:"Plant",id:"plant",level:2},{value:"Plant Code",id:"plant-code",level:3},{value:"Plant C Total",id:"plant-c-total",level:3},{value:"Plant C Year",id:"plant-c-year",level:3},{value:"Plant Total",id:"plant-total",level:3},{value:"DeliveryNote",id:"deliverynote",level:2},{value:"Delivery Items",id:"delivery-items",level:2},{value:"Financial",id:"financial",level:2},{value:"Project2",id:"project2",level:2},{value:"Spaces",id:"spaces",level:2},{value:"Tax(onomy) Genus",id:"taxonomy-genus",level:2},{value:"TCPA",id:"tcpa",level:2},{value:"TCPY",id:"tcpy",level:2},{value:"Web stuff",id:"web-stuff",level:2}];function h(e){const n={admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Here is the weekly update of (significant) changes made in Xiphium this week, extracted from Git(Hub)."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"This Blog post marks a year of Tracking Xiphium using Project mode and Git(Hub)!\r\nThis means that we can look back on all changes made to Xiphium in the last year!"})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"These are interpretations of code read from the weekly changes from Git(Hub) and are therefore prone to errors."})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"dashboard",children:"Dashboard"}),"\n",(0,i.jsx)(n.h3,{id:"tpp",children:"TPP"}),"\n",(0,i.jsxs)(n.p,{children:["Methods ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Dash_D9_FillGraph_Bar"})})," and ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Dash_D9_FillGraph_Bubble"})})," have been added. These methods create a graph to display TPP's for the dashboard, taken from [ComPCropY] and/or [PlantC_Year]"]}),"\n",(0,i.jsx)(n.h3,{id:"radio-button",children:"Radio Button"}),"\n",(0,i.jsx)(n.p,{children:"Radio button 'Transfers'(object Name: Radio Button21) of Form 'General_Dashboard' tab 7 (\"TC Capacity/Crop\") now updates [PlantC_Total] records remark to be 'Double' when requirements are met."}),"\n",(0,i.jsx)(n.admonition,{title:"Waring",type:"danger",children:(0,i.jsx)(n.p,{children:'It seems like someone accidentally pasted code here because this dashboard tab has nothing to do with [PlantC_Total], and this button should only be a simple selector for graph options.\r\nThe exact same code has been pasted in Form [PlantC_Total]"PlaCT_List" objectName: "Button 4".'})}),"\n",(0,i.jsx)(n.h2,{id:"action-list",children:"Action List"}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"AL_ExportExcelComplaints"})})," now exports an extra columns with 'ComName Init', which seems to be the company name that initiated the complaint."]}),"\n",(0,i.jsx)(n.h2,{id:"breeding-rights",children:"Breeding Rights"}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"BreRig_UpdateRecord"})})," has been modified. A classic query has been refactored to an ORDA query. The method now finds a Genus Name and CropCode based on a GenusCode, and finds a GenusCode based on GenusName."]}),"\n",(0,i.jsxs)(n.admonition,{title:"Warning",type:"danger",children:[(0,i.jsx)(n.p,{children:"The code is now as follows:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4D",children:'If ([BreederRights]BreRig_GenusCode#0)\r\n\t$tax_Genus:=ds.Tax_Genus.query("TaxGen_GenusCode = :1"; [BreederRights]BreRig_GenusCode)\r\n\tIf ($tax_Genus.length=1)\r\n\t\t$tax_Genus:=$tax_Genus.first()\r\n\t\t[BreederRights]BreRig_GenusName:=$tax_Genus.TaxGen_GenusName\r\n\t\t[BreederRights]BreRig_CropCode:11:=$tax_Genus.TaxGen_CropCode\r\n\tEnd if \r\nEnd if \r\n\r\nIf ([BreederRights]BreRig_GenusCode=0) & ([BreederRights]BreRig_GenusName#"")\r\n\t$tax_Genus:=ds.Tax_Genus.query("TaxGen_GenusName = :1"; [BreederRights]BreRig_GenusName)\r\n\tIf ($tax_Genus.length=1)\r\n\t\t$tax_Genus:=$tax_Genus.first()\r\n\t\t[BreederRights]BreRig_GenusCode:=$tax_Genus.TaxGen_GenusCode\r\n\tEnd if \r\nEnd if \n'})}),(0,i.jsx)(n.p,{children:"The code sequence should be inverted. First, a GenusCode should be found if there is none, then the GenusName and CropCode should be found. Or alternatively, The CropCode should be taken after both queries."})]}),"\n",(0,i.jsx)(n.h2,{id:"crop-loc-year",children:"Crop Loc Year"}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"ComPCropY_UpdateRecord"})})," has been extended to calculate 4 different Transfers per Plant (TPP):"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"TPP Root (Transfers per Rooted Plant)"}),"\n",(0,i.jsx)(n.li,{children:"TPP Del (Transfers per Deliverd Plant)"}),"\n",(0,i.jsx)(n.li,{children:"TPP Planted (Transfers per Planted Plant)"}),"\n",(0,i.jsx)(n.li,{children:"TPP Accept (Transfers per Accepted Plant)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These fields are used for the TPP Dashboard."}),"\n",(0,i.jsx)(n.h2,{id:"plant",children:"Plant"}),"\n",(0,i.jsx)(n.h3,{id:"plant-code",children:"Plant Code"}),"\n",(0,i.jsx)(n.p,{children:"Method Pla_Export_Excel_Quart_ReportMC has been added."}),"\n",(0,i.jsx)(n.h3,{id:"plant-c-total",children:"Plant C Total"}),"\n",(0,i.jsxs)(n.p,{children:["Some work has been done on the [PlantC_Total] table. Methods ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"PlaCT_Filter"})})," and ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"PlaCT_UpdateRecord"})})," have been modified. The forecast in ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"PlaCT_UpdateRecord"})}),' is now only updated if defaultCompany="001".']}),"\n",(0,i.jsx)(n.h3,{id:"plant-c-year",children:"Plant C Year"}),"\n",(0,i.jsxs)(n.p,{children:["Some work has been done on the [PlantC_Year] table. Methods ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"PlaCY_Colorfield"})}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"PlaCY_Sum"})})," and ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"PlaCY_UpdateRecord"})})," have been modified."]}),"\n",(0,i.jsx)(n.h3,{id:"plant-total",children:"Plant Total"}),"\n",(0,i.jsxs)(n.p,{children:["Methods ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"PlantT_UpdateRecord"})})," has been modified. The method now assigns values from a [Company] record to process variables. The use of this is unclear from reading just the diff allone."]}),"\n",(0,i.jsx)(n.h2,{id:"deliverynote",children:"DeliveryNote"}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"DeN_PrintLabelsQR"})}),' has been modified. The method now checks if printer "ZebraTLP2824Kas" is present before sending the print command to it. Otherwise it will use printer "ZebraTLP2824".']}),"\n",(0,i.jsx)(n.h2,{id:"delivery-items",children:"Delivery Items"}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"DiT_Export_PackingListTS"})})," has been added. The method exports a packing list. The acronym 'TS' is unclear to me."]}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"DiT_ExportExcelDialog"})})," has been modified to include the new ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"DeN_PrintLabelsQR"})})," export option."]}),"\n",(0,i.jsx)(n.h2,{id:"financial",children:"Financial"}),"\n",(0,i.jsx)(n.p,{children:"[Fin_Com_Total], [Fin_Com_Month] and [Fin_Com_Year] have their UpdateRecord method modified to store the last date the method has bee applied to that record."}),"\n",(0,i.jsx)(n.h2,{id:"project2",children:"Project2"}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Pro2_Updaterecord_Val"})})," has been modified. The classic query has been optimized for performance."]}),"\n",(0,i.jsx)(n.h2,{id:"spaces",children:"Spaces"}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"SpaD_UpdateRecord"})})," has been modified. The method now takes the username from a variable that is set in the beginning of the method:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-4D",children:'If (Modified record([Spaces_Detail]))\r\n\t\r\n\t// RL 06-09-2024) : Zie ticket #221\r\n\tIf (([Spaces_Detail]SpaD_EmpName_Modified#Old:C35([Spaces_Detail]SpaD_EmpName_Modified)) & ([Spaces_Detail]SpaD_EmpName_Modified#""))\r\n\t\t$currentUser:=[Spaces_Detail]SpaD_EmpName_Modified\r\n\tElse \r\n\t\t$currentUser:=Current user\r\n\tEnd if \n'})}),"\n",(0,i.jsx)(n.p,{children:"This was done in response to ticker #221 on github. The locations app makes changes to this record, and the 'current user' would be designer. This is not fixed with the above implementation."}),"\n",(0,i.jsx)(n.h2,{id:"taxonomy-genus",children:"Tax(onomy) Genus"}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"TaxGen_UpdateRecord"})})," has been modified. the classic query has been refactored to an ORDA query. Also, the Genus code will be equal to the record ID if the Genus code is empty(=0)."]}),"\n",(0,i.jsx)(n.h2,{id:"tcpa",children:"TCPA"}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"TCPA_ExportDCWeek"})}),' has been modified. 2 new columns have been added with the name "CropName" and "PlantName"']}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"TCPA_SyncExportProtCultivar"})})," has been modified. The method now changes its behaviour depending on the $fromCompany variable (NL is handled differencly than the others)."]}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"TCPA_SyncImportProtCultivar"})})," has been modified. The method now does a multi-line classic query based on given parameters, instead of a query based on id."]}),"\n",(0,i.jsx)(n.h2,{id:"tcpy",children:"TCPY"}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"TCPY_UpdateRecord"})})," now also counts the amount of related TCPC records."]}),"\n",(0,i.jsx)(n.h2,{id:"web-stuff",children:"Web stuff"}),"\n",(0,i.jsx)(n.p,{children:"Several adjustments have been done for the locations and the purchase app."})]})}function c(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>s});var i=t(7294);const r={},a=i.createContext(r);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);