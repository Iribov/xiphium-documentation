"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5291],{2063:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=i(4848),t=i(8453);const o={title:"Xiphium 2024-W34 update",authors:["jim"]},d=void 0,s={permalink:"/xiphium-documentation/blog/2024/08/22/Xiphium-W34-Update/Index",editUrl:"https://github.com/Iribov/xiphium-documentation/edit/main/blog/2024-08-22-Xiphium-W34-Update/Index.md",source:"@site/blog/2024-08-22-Xiphium-W34-Update/Index.md",title:"Xiphium 2024-W34 update",description:"Here is the weekly update of (significant) changes made in Xiphium this week, extracted from Git(Hub).",date:"2024-08-22T00:00:00.000Z",formattedDate:"August 22, 2024",tags:[],readingTime:3.135,hasTruncateMarker:!0,authors:[{name:"Jim Kerver",title:"4D Developer @Iribov",url:"https://github.com/Jim-Kerver",imageURL:"https://github.com/Jim-Kerver.png",key:"jim"}],frontMatter:{title:"Xiphium 2024-W34 update",authors:["jim"]},unlisted:!1,prevItem:{title:"Xiphium 2024-W35 update",permalink:"/xiphium-documentation/blog/2024/08/30/Xiphium-W35-Update/Index"},nextItem:{title:"Xiphium 2024-W33 update",permalink:"/xiphium-documentation/blog/2024/08/16/Xiphium-W33-Update/Index"}},a={authorsImageUrls:[void 0]},l=[{value:"Compiler",id:"compiler",level:2},{value:"Financial",id:"financial",level:2},{value:"Order",id:"order",level:2},{value:"Plant Total",id:"plant-total",level:2},{value:"Project2_Year",id:"project2_year",level:2},{value:"Experiments",id:"experiments",level:2},{value:"Access",id:"access",level:2},{value:"Web stuff",id:"web-stuff",level:2},{value:"Meme of the week",id:"meme-of-the-week",level:2}];function h(e){const n={admonition:"admonition",code:"code",em:"em",h2:"h2",hr:"hr",img:"img",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Here is the weekly update of (significant) changes made in Xiphium this week, extracted from Git(Hub)."}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"These are interpretations of code read from the weekly changes from Git(Hub) and are therefore prone to errors."})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Many changes were made this week. Therefore, only the project method changes will be reviewed here."})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"compiler",children:"Compiler"}),"\n",(0,r.jsxs)(n.p,{children:["For some reason, the compiler in 4D v20.1 LTS project mode catches more errors than in production (v19.1 LTS binary interpreted). These errors are mostly ",(0,r.jsx)(n.code,{children:":"})," instead of ",(0,r.jsx)(n.code,{children:";"})," (for separating variables in the declaration) or a useless ",(0,r.jsx)(n.code,{children:";"})," at the end of a line, for example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4D",children:"C_LONGINT(vInteger1:vInteger2)\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4D",children:"C_BOOLEAN($bool);\n"})}),"\n",(0,r.jsx)(n.p,{children:"This has been going on for a while, but from this week on I will correct these syntax errors."}),"\n",(0,r.jsx)(n.h2,{id:"financial",children:"Financial"}),"\n",(0,r.jsxs)(n.p,{children:["Detail tab added to Ledger Group called 'Ledger Month' in access method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Access_SetupLedgerMenu"})}),"\r\nDetail tab added to Ledger Year called 'Month MC' in access method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Access_SetupLedgerMenu"})})]}),"\n",(0,r.jsx)(n.p,{children:"Several 'Clear' methods related to financial tables have been modified (methods used to clear variables used for querying)."}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"FinLGT_UpdateRecord"})})," has been modified. The queries for calculating totals from [FinLeG_Total] have been optimized. The results should be the same, but the code is now better readable and possibly even faster in execution time."]}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"FinLeM_UpdateRecord"})})," has been modified to to store the intercompany boolean from its related [Ledger_total]."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Why does the [Ledger_Month] need to copy a boolean from a record it is already related to?!"})}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:"When a new parameter is used for a query, instead of querying the entitySelection, add the new parameter to the existing query. This will reduce execution time because there will be less server/client communication necessary. Also, hardcoded values could/should be inside the query string for extra clarity (except for dates!)."}),(0,r.jsx)(n.p,{children:"So instead of:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4D",children:'$FinLeM:=ds.FinLed_Month.query("FinLeM_LedgerCode = :1 and FinLeM_Month = :2 and FinLeM_ComCode_MC = :3"; [FinLed_Month]FinLeM_LedgerCode; [FinLed_Month]FinLeM_Month; [FinLed_Month]FinLeM_ComCode)\r\n$FinLeM:=$FinLeM.query("FinLeM_InterCompany = :1"; False)\n'})}),(0,r.jsx)(n.p,{children:"Do:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4D",children:'$FinLeM:=ds.FinLed_Month.query("FinLeM_LedgerCode = :1 and FinLeM_Month = :2 and FinLeM_ComCode_MC = :3 and FinLeM_InterCompany = False"; [FinLed_Month]FinLeM_LedgerCode; [FinLed_Month]FinLeM_Month; [FinLed_Month]FinLeM_ComCode)\n'})})]}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"FinLeT_UpdateRecord"})})," has been modified. It seems like a minor optimization in execution speed by commenting out duplicate operations."]}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"FinLeY_UpdateRecord"})})," now copies the intercompany boolean from its related ledger total."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Why does the [Ledger_Year] need to copy a boolean from a record it is already related to?!"})}),"\n",(0,r.jsx)(n.h2,{id:"order",children:"Order"}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Ord_CreateRecord_ComCrop"})})," has been renamed to Ord_Create_ComCrop and the code is also copied to Ord_Create_ComCrop_x."]}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Ord_CreateRecord_Prices"})})," has been renamed to ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Ord_Create_Prices"})})]}),"\n",(0,r.jsx)(n.h2,{id:"plant-total",children:"Plant Total"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Clear_PlantT"})})," has been extended with 20 more variables."]}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"PlantT_UpdateRecord"})})," has been modified. The method now calculates 'Plants Present' and 'Order' amounts for location 1 through 6 (all in seperate fields). There is now also the 'multiloc' field that shows in how many locations there are plants ordered (with a threshold of 1.000 plants minimum)."]}),"\n",(0,r.jsx)(n.h2,{id:"project2_year",children:"Project2_Year"}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Pro2Y_UpdateRecord"})})," has been modified. The 'Budget Order' is now correctly calculated, dividing delivery orders and non delivery orders properly (before, the division was between delivery orders and all orders)."]}),"\n",(0,r.jsx)(n.h2,{id:"experiments",children:"Experiments"}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Scanning_ClosePrinting"})})," has 1 new line added:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4D",children:"REDUCE SELECTION([Exp_Treatment]; 0)\n"})}),"\n",(0,r.jsx)(n.p,{children:"This code snippet is inside a for loop, and is trying to fix a bug where only 1 out of n treatments is made in the classic Experiment scan menu."}),"\n",(0,r.jsx)(n.h2,{id:"access",children:"Access"}),"\n",(0,r.jsxs)(n.p,{children:["Methods ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Tab_GetFirstAccessibleTab"})})," and ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Tab_GotoPage"})})," have been added."]}),"\n",(0,r.jsx)(n.h2,{id:"web-stuff",children:"Web stuff"}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Compiler_WebApp"})})," has been removed, and the code has been implemented in ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Compiler_Methods"})})," and ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Compiler_Variables"})}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Constant 'Xiphium Location Settings App ID' has been added."}),"\n",(0,r.jsx)(n.p,{children:"Several optimizations and changes done to several methods (too much to summarize here)."}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Web_LocSettingsController"})})," has been added."]}),"\n",(0,r.jsx)(n.h2,{id:"meme-of-the-week",children:"Meme of the week"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:i(9665).A+"",width:"2390",height:"1754"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Meme of the week is NOT a recurrent theme and is only instantiated whenever I feel like it."})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>s});var r=i(6540);const t={},o=r.createContext(t);function d(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(o.Provider,{value:n},e.children)}},9665:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/Problem_Solution-314038df453685ea1a35304e55b7b464.png"}}]);