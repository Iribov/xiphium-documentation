"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1325],{4539:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var i=t(5893),r=t(1151);const o={title:"Xiphium 2025-W25 update",authors:["jim"]},s=void 0,l={permalink:"/xiphium-documentation/blog/2025/06/20/Xiphium-W25-Update/Index",editUrl:"https://github.com/Iribov/xiphium-documentation/edit/main/blog/2025-06-20-Xiphium-W25-Update/Index.md",source:"@site/blog/2025-06-20-Xiphium-W25-Update/Index.md",title:"Xiphium 2025-W25 update",description:"Here is the weekly update of (significant) changes made in Xiphium this week, extracted from Git(Hub).",date:"2025-06-20T00:00:00.000Z",formattedDate:"June 20, 2025",tags:[],readingTime:2.225,hasTruncateMarker:!0,authors:[{name:"Jim Kerver",title:"4D Developer @Iribov",url:"https://github.com/Jim-Kerver",imageURL:"https://github.com/Jim-Kerver.png",key:"jim"}],frontMatter:{title:"Xiphium 2025-W25 update",authors:["jim"]},unlisted:!1,prevItem:{title:"Xiphium 2025-W26 update",permalink:"/xiphium-documentation/blog/2025/06/27/Xiphium-W26-Update/Index"},nextItem:{title:"Xiphium 2025-W24 update",permalink:"/xiphium-documentation/blog/2025/06/13/Xiphium-W24-Update/Index"}},d={authorsImageUrls:[void 0]},a=[{value:"Order",id:"order",level:2},{value:"Plant prices",id:"plant-prices",level:2},{value:"TCPA",id:"tcpa",level:2},{value:"TCB",id:"tcb",level:2},{value:"Greenhouse planning",id:"greenhouse-planning",level:2},{value:"Meme of the week",id:"meme-of-the-week",level:2}];function c(e){const n={admonition:"admonition",code:"code",em:"em",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Here is the weekly update of (significant) changes made in Xiphium this week, extracted from Git(Hub)."}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"These are interpretations of code read from the weekly changes from Git(Hub) and are therefore prone to errors."})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"A total of 67 files were modified. Most of which are to update variable declaration."})}),"\n",(0,i.jsx)(n.h2,{id:"order",children:"Order"}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Ord_ExportExcel_Flex"})})," is expanded with an extra (optional) column called 'List price assignment'."]}),"\n",(0,i.jsx)(n.h2,{id:"plant-prices",children:"Plant prices"}),"\n",(0,i.jsxs)(n.p,{children:["Color method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"PlaPri_ColorField"})})," now sets status 'Cur@' to green instead of status 'Act@'."]}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"PlaPri_UpdateRecord"})})," now sets status to 'Current' instead of 'Active'."]}),"\n",(0,i.jsxs)(n.p,{children:["Filter button method in form 'PlaPri_List' object 'OrG_Btn_Filter' was modified. All of the ",(0,i.jsx)(n.code,{children:"QUERY"})," statements (ending with a ",(0,i.jsx)(n.code,{children:"*"}),") were replaced with a ",(0,i.jsx)(n.code,{children:"QUERY SELECTION"})," statement, and the method now starts with an ",(0,i.jsx)(n.code,{children:"ALL RECORDS"})," function. I can see why a change was necessary, because this code would not function as desired but the change made is sub-optimal for performance."]}),"\n",(0,i.jsxs)(n.admonition,{title:"reduce server calls",type:"danger",children:[(0,i.jsxs)(n.p,{children:["using ",(0,i.jsx)(n.code,{children:"QUERY SELECTION"})," will result in a server call ",(0,i.jsx)(n.strong,{children:"EVERY TIME"})," it is used. And even worse, starting the filter with ",(0,i.jsx)(n.code,{children:"ALL RECORDS"})," means it has to fetch all of the records from the server, even though you are going to filter it later anyway."]}),(0,i.jsxs)(n.p,{children:["Using many ",(0,i.jsx)(n.code,{children:"QUERY"})," statement (using the ",(0,i.jsx)(n.code,{children:"&"})," and the ",(0,i.jsx)(n.code,{children:"*"})," properties) is a more optimized way, reducing everything to just 1 server call that returns only the records you have asked for. By converting to ORDA you can optimize even more by putting the ",(0,i.jsx)(n.code,{children:"ORDER BY"})," function into the query call, going from 2 server calls to just 1!"]}),(0,i.jsxs)(n.p,{children:["This change might not be as noticeable when using Xipihum on LAN (on premise), but it will make a ",(0,i.jsx)(n.strong,{children:"HUGE"})," difference on WAN (like when working from home)."]})]}),"\n",(0,i.jsx)(n.h2,{id:"tcpa",children:"TCPA"}),"\n",(0,i.jsxs)(n.p,{children:["Method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"TCPA_SyncExportClones"})})," is expanded to include an if statement for company 006 (Brazil). It seems like it want to exclude certain clone fields when it's exporting to Brazil."]}),"\n",(0,i.jsx)(n.p,{children:"Fields to exclude:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"[Clone]Clo_DeliveryNote"}),"\n",(0,i.jsx)(n.li,{children:"[Clone]Clo_Origin_Clone"}),"\n",(0,i.jsx)(n.li,{children:"[Clone]Clo_OriginType"}),"\n",(0,i.jsx)(n.li,{children:"[Clone]Clo_Origin_Plant_Type"}),"\n",(0,i.jsx)(n.li,{children:"[Clone]Clo_CloneType"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The import method ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"TCPA_SyncImportClones"})})," keeps the Old value of these excluded fields (so they never actually hcange from this import)."]}),"\n",(0,i.jsx)(n.h2,{id:"tcb",children:"TCB"}),"\n",(0,i.jsxs)(n.p,{children:["Methods ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"TCBP_ActionEventHandler"})})," and ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"TCBP_AreaEventHandler"})})," are added. Methods ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"TCBP_DrawActions"})})," and ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"TCBP_SetupLayers"})})," are modified."]}),"\n",(0,i.jsx)(n.h2,{id:"greenhouse-planning",children:"Greenhouse planning"}),"\n",(0,i.jsx)(n.p,{children:"Small bug in Greenhouse Protocol line creation fixed (variables were getting checked without having a value)."}),"\n",(0,i.jsx)(n.p,{children:"Wrong field name in a complex ORDA filter button expression resulted in a blocking progress bar (a 4D restart was needed to resolve). Typing the correct field name makes it work as expected."}),"\n",(0,i.jsx)(n.h2,{id:"meme-of-the-week",children:"Meme of the week"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.img,{src:t(851).Z+"",width:"500",height:"516"}),"\n",(0,i.jsx)(n.em,{children:"Meme of the week is NOT a recurrent theme and is only instantiated whenever I feel like it."})]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},851:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/Refactor_I_Barely_Know_Her-a88f9fc3fdd796226dd52f3358b79827.jpeg"},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>s});var i=t(7294);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);