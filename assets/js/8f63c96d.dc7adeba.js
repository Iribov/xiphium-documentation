"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8754],{2376:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/TC_Reg_Emp Tracing-99eb8675aeac6c4e226f89328cecc1d8.png"},3912:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var s=n(4848),d=n(8453);const i={sidebar_position:5},r="TC Registration Employee",l={id:"Tissue_Culture/TC_Reg_Emp",title:"TC Registration Employee",description:"The Tissue Culture Registration per Employee (TC Reg Emp) registers everything done to (a batch of) tissue culture plants. Whenever an employee uses the scanning system for tissue culture, a TC Reg Emp record is either added or modified. Modifications to a TC Reg Emp record are recorded in the MutationsEmployee table. TCRegEmp is the most detailed Table to get the current 'Plants Present' (a.k.a Stock), but most often TCPA is used because 'Plants present' is also synchronized to this table.",source:"@site/docs/Tissue_Culture/TC_Reg_Emp.md",sourceDirName:"Tissue_Culture",slug:"/Tissue_Culture/TC_Reg_Emp",permalink:"/xiphium-documentation/docs/Tissue_Culture/TC_Reg_Emp",draft:!1,unlisted:!1,editUrl:"https://github.com/Iribov/xiphium-documentation/edit/main/docs/Tissue_Culture/TC_Reg_Emp.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"TC Planning Actions",permalink:"/xiphium-documentation/docs/Tissue_Culture/TCPA"},next:{title:"Employee Job",permalink:"/xiphium-documentation/docs/Tissue_Culture/Employee_Job"}},o={},a=[{value:"Tracing/Tracking cycle of TC_Reg_Emp",id:"tracingtracking-cycle-of-tc_reg_emp",level:2},{value:"Fields and their functions",id:"fields-and-their-functions",level:2},{value:"Fundamental fields",id:"fundamental-fields",level:3},{value:"base fields",id:"base-fields",level:3},{value:"secondary fields",id:"secondary-fields",level:3},{value:"Infection/Contamination definitions",id:"infectioncontamination-definitions",level:4},{value:"And more... So much more...",id:"and-more-so-much-more",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"tc-registration-employee",children:"TC Registration Employee"}),"\n",(0,s.jsxs)(t.p,{children:["The Tissue Culture Registration per Employee (TC Reg Emp) registers everything done to (a batch of) tissue culture plants. Whenever an employee uses the scanning system for tissue culture, a TC Reg Emp record is either added or modified. Modifications to a TC Reg Emp record are recorded in the ",(0,s.jsx)(t.a,{href:"/xiphium-documentation/docs/Tissue_Culture/Mutations_Employee",children:"Mutations_Employee"})," table. TC_Reg_Emp is the most detailed Table to get the current 'Plants Present' (a.k.a Stock), but most often ",(0,s.jsx)(t.a,{href:"/xiphium-documentation/docs/Tissue_Culture/TCPA",children:"TCPA"})," is used because 'Plants present' is also synchronized to this table."]}),"\n",(0,s.jsx)(t.h2,{id:"tracingtracking-cycle-of-tc_reg_emp",children:"Tracing/Tracking cycle of TC_Reg_Emp"}),"\n",(0,s.jsx)(t.p,{children:"The tracing cycle of TC_Reg_Emp (within tissue culture) is as follows:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Scanning of jars is done in the scanning menu.","\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["This creates an ",(0,s.jsx)(t.a,{href:"/xiphium-documentation/docs/Tissue_Culture/Employee_Job",children:"Employee Job"})," record, as well as a 'Transfer' ",(0,s.jsx)(t.a,{href:"/xiphium-documentation/docs/Tissue_Culture/Mutations_Employee",children:"Mutations Employee"})," record"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["Printing of new stickers while creating new TC_Reg_Emp record(s)","\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["When printing, this both links the new TC_Reg_Emp to the 'current' ",(0,s.jsx)(t.a,{href:"/xiphium-documentation/docs/Tissue_Culture/Employee_Job",children:"Employee Job"}),", and creates a new 'Printing' ",(0,s.jsx)(t.a,{href:"/xiphium-documentation/docs/Tissue_Culture/Mutations_Employee",children:"Mutations Employee"})," to indicate the new plants/stock."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.img,{src:n(2376).A+"",width:"666",height:"371"}),"\r\nIt is possible to send/get plants to/from ",(0,s.jsx)(t.a,{href:"/xiphium-documentation/docs/Deliveries/Delivery_Items",children:"Delivery Items"})," using ",(0,s.jsx)(t.a,{href:"/xiphium-documentation/docs/Tissue_Culture/Mutations_Employee",children:"Mutations_Employee"}),", but that explanation has to wait until another day."]}),"\n",(0,s.jsx)(t.h2,{id:"fields-and-their-functions",children:"Fields and their functions"}),"\n",(0,s.jsx)(t.p,{children:"Let's try to categorize and describe some fields of [TC_Reg_Emp]. There are a total of 152 fields in [TC_Reg_Emp] (as of writing this 06-06-2024), so not all fields will be covered."}),"\n",(0,s.jsx)(t.h3,{id:"fundamental-fields",children:"Fundamental fields"}),"\n",(0,s.jsx)(t.p,{children:"The fundamental fields are fields that describe fundemental properties needed to identify the produced plant."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"field name (Xiphium)"}),(0,s.jsx)(t.th,{children:"Visual Name (user)"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Formula"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_Barcode"}),(0,s.jsx)(t.td,{children:"Barcode"}),(0,s.jsx)(t.td,{children:"Unique Code generated by using that is printed labels that are put on tissue culture containers."}),(0,s.jsxs)(t.td,{children:["Method: ",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.strong,{children:"Barcode_CreateEAN13"})})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_ID"}),(0,s.jsx)(t.td,{children:"ID"}),(0,s.jsx)(t.td,{children:"Numeric Unique Code automatically generated by the database. Is locally unique, NOT unique across database instances"}),(0,s.jsx)(t.td,{children:"Auto-Generated by DB"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_ID_Master"}),(0,s.jsx)(t.td,{children:"IDM/ID Master"}),(0,s.jsx)(t.td,{children:"Numeric Unique Code generated from combining the Default_Company and ID."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"[TC_Reg_Emp]TC2E_ID_Master:=(100000000*Num([TC_Reg_Emp]TC2E_ComCode_Master))+[TC_Reg_Emp]TC2E_ID"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_ID_ComCode_Master"}),(0,s.jsx)(t.td,{children:"N/A"}),(0,s.jsx)(t.td,{children:"Default Company Code of the database instance that has originally created this record."}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_ID_Job"}),(0,s.jsx)(t.td,{children:"Job ID"}),(0,s.jsx)(t.td,{children:"ID of the [Employee_Job] record under which this registration has been produced"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_ID_TCPG"}),(0,s.jsx)(t.td,{children:"TCPG ID"}),(0,s.jsx)(t.td,{children:"ID of the Planning Group under which this registration is produced"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_CropCode"}),(0,s.jsx)(t.td,{children:"Crop Code"}),(0,s.jsx)(t.td,{children:"Alphanumeric Code of the Crop that is produced. This field has a relation to the [Crop] table."}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_Cropname1"}),(0,s.jsx)(t.td,{children:"Crop Name"}),(0,s.jsx)(t.td,{children:"Latin name of the Crop that is produced"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"QUERY([Plant_Code]; [Plant_Code]Pla_PlantCode=[TC_Reg_Emp]TC2E_PlantCode) [TC_Reg_Emp]TC2E_Cropname1:=[Plant_Code]Pla_CropName"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_PlantCode"}),(0,s.jsx)(t.td,{children:"PlantCode"}),(0,s.jsx)(t.td,{children:"Plant Code of the plants that are produced. This field has a relation to the [Plant_Code] table."}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_PlantName"}),(0,s.jsx)(t.td,{children:"Plant Name"}),(0,s.jsx)(t.td,{children:"Copy of data field Pla_Plant_Name1 of the related [Plant_Code] record"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"QUERY([Plant_Code]; [Plant_Code]Pla_PlantCode=[TC_Reg_Emp]TC2E_PlantCode) TC_Reg_Emp]TC2E_Plantname:=[Plant_Code]Pla_PlantName1"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_ID_Emp"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"ID of the employee who produced these plants. This field is related to the [Employee] table"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_Emp_Name"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Name (first and last) of the employee who produced these plants."}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_Activity"}),(0,s.jsx)(t.td,{children:"Activity"}),(0,s.jsx)(t.td,{children:"Alphanumeric Abreviation describing which activity is done to the plants"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_ActivityGroup"}),(0,s.jsx)(t.td,{children:"Activity Group"}),(0,s.jsx)(t.td,{children:"Alphanumeric abreviation describing the group of the activity"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"base-fields",children:"base fields"}),"\n",(0,s.jsx)(t.p,{children:"The base fields are important fields necessary to tracking the production of plants"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"field name (Xiphium)"}),(0,s.jsx)(t.th,{children:"Visual Name (user)"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Formula"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Box_0_Trans"}),(0,s.jsx)(t.td,{children:"Boxes Produced"}),(0,s.jsx)(t.td,{children:"Amount of boxes (containers) produced, fully filled with plants"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_0_PPB"}),(0,s.jsx)(t.td,{children:"Plants per Box"}),(0,s.jsx)(t.td,{children:"Amount of plants present per Box"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_0_Trans"}),(0,s.jsx)(t.td,{children:"Plants Produced"}),(0,s.jsx)(t.td,{children:"Amount of plants produced"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"[TC_Reg_Emp]TC2E_N_Plants_0_Trans:=[TC_Reg_Emp]TC2E_N_Box_0_Trans*[TC_Reg_Emp]TC2E_N_0_PPB"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Box_0_Infected"}),(0,s.jsx)(t.td,{children:"Boxes Infected"}),(0,s.jsx)(t.td,{children:"Amount of boxes (containers) infected"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_0_Infected"}),(0,s.jsx)(t.td,{children:"Plants Infected"}),(0,s.jsx)(t.td,{children:"Amount of plants infected"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Box_0_Discarded"}),(0,s.jsx)(t.td,{children:"Boxes Discarded"}),(0,s.jsx)(t.td,{children:"Amount of boxes (containers) discarded"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_0_Discarded"}),(0,s.jsx)(t.td,{children:"Plants Discarded"}),(0,s.jsx)(t.td,{children:"Amount of plants discarded"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Box_0_Used"}),(0,s.jsx)(t.td,{children:"Boxes Transferred"}),(0,s.jsx)(t.td,{children:"Amount of Boxes used/transferred for/to the next cycle"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_0_Used"}),(0,s.jsx)(t.td,{children:"Plants Transferred"}),(0,s.jsx)(t.td,{children:"Amount of plants used-for/transferred-to the next cycle"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Box_0_Delivered"}),(0,s.jsx)(t.td,{children:"Boxes Delivered"}),(0,s.jsx)(t.td,{children:"Amount of boxes used for delivery"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_0_Delivered"}),(0,s.jsx)(t.td,{children:"Plants Delivered"}),(0,s.jsx)(t.td,{children:"Amount of boxes used for delivery"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Box_0_Correction"}),(0,s.jsx)(t.td,{children:"Boxes Correction"}),(0,s.jsx)(t.td,{children:"Amount of boxes (manually?) corrected to create an accurate stock"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_0_Correction"}),(0,s.jsx)(t.td,{children:"Plants Correction"}),(0,s.jsx)(t.td,{children:"Amount of plants (manually?) corrected to create an accurate stock"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Box_0_Cooling"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"?"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_0_Cooling"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"?"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Box_0_Present"}),(0,s.jsx)(t.td,{children:"Boxes Present"}),(0,s.jsx)(t.td,{children:"Amount of boxes in stock (currently present)"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"TC2E_N_Box_0_Present:=TC2E_N_Box_0_Trans-TC2E_N_Box_0_Used-TC2E_N_Box_0_Discarded-TC2E_N_Box_0_Infected-TC2E_N_Box_0_Delivered-TC2E_N_Box_0_Correction-TC2E_N_Box_0_Cooling"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_0_Present"}),(0,s.jsx)(t.td,{children:"Plants Present"}),(0,s.jsx)(t.td,{children:"Amount of boxes in stock (currently present)"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"TC2E_N_Plants_0_Present:=TC2E_N_Plants_0_Trans-TC2E_N_Plants_0_Used-TC2E_N_Plants_0_Discarded-TC2E_N_Plants_0_Infected-TC2E_N_Plants_0_Delivered-TC2E_N_Plants_0_Correction-TC2E_N_Plants_0_Cooling"})})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"secondary-fields",children:"secondary fields"}),"\n",(0,s.jsx)(t.p,{children:"The secondary fields are fields that are used for tracking, but are less imports. Fields such as 'Infection Level' are not as important as 'Plants Infected'"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"field name (Xiphium)"}),(0,s.jsx)(t.th,{children:"Visual Name (user)"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Formula"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_Present_Sterile"}),(0,s.jsx)(t.td,{children:"Plant present Sterile"}),(0,s.jsx)(t.td,{children:"Amount of plants currently present that are not infected"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_Present_Contam"}),(0,s.jsx)(t.td,{children:"Plant present contaminated"}),(0,s.jsx)(t.td,{children:"Amount of plants currently present that are infected"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_InfectDC"}),(0,s.jsx)(t.td,{children:"Infected DC"}),(0,s.jsx)(t.td,{children:"Amount of plants that are infected because of reason 'DC'"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_InfectDG"}),(0,s.jsx)(t.td,{children:"Infected DG"}),(0,s.jsx)(t.td,{children:"Amount of plants that are infected because of reason 'DG'"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_InfectDS"}),(0,s.jsx)(t.td,{children:"Infected DS"}),(0,s.jsx)(t.td,{children:"Amount of plants that are infected because of reason 'DS'"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_InfectDA"}),(0,s.jsx)(t.td,{children:"Infected DA"}),(0,s.jsx)(t.td,{children:"Amount of plants that are infected because of reason 'DA'"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_InfectLS"}),(0,s.jsx)(t.td,{children:"Infected LS"}),(0,s.jsx)(t.td,{children:"Amount of plants that are infected because of reason 'LS'"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_InfectDR"}),(0,s.jsx)(t.td,{children:"Infected DR"}),(0,s.jsx)(t.td,{children:"Amount of plants that are infected because of reason 'DR'"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_InfectDD"}),(0,s.jsx)(t.td,{children:"Infected DD"}),(0,s.jsx)(t.td,{children:"Amount of plants that are infected because of reason 'DD'"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_InfectBF"}),(0,s.jsx)(t.td,{children:"Infected BF"}),(0,s.jsx)(t.td,{children:"Amount of plants that are infected because of reason 'BF'"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_InfectBFG"}),(0,s.jsx)(t.td,{children:"Infected BFG"}),(0,s.jsx)(t.td,{children:"Amount of plants that are infected because of reason 'BFG'"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_Prod_S0"}),(0,s.jsx)(t.td,{children:"Plants produced per Cont. Level; Level S0"}),(0,s.jsx)(t.td,{children:"Amount of plants without contamination"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_Prod_S1"}),(0,s.jsx)(t.td,{children:"Plants produced per Cont. Level; Level S1"}),(0,s.jsx)(t.td,{children:"Amount of plants without contamination, but with a suspicion of possible contamination"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_Prod_B1"}),(0,s.jsx)(t.td,{children:"Plants produced per Cont. Level; Level B1"}),(0,s.jsx)(t.td,{children:"Amount of plants with some contamination"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_Prod_B2"}),(0,s.jsx)(t.td,{children:"Plants produced per Cont. Level; Level B2"}),(0,s.jsx)(t.td,{children:"Amount of plants with contamination"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_Prod_B3"}),(0,s.jsx)(t.td,{children:"Plants produced per Cont. Level; Level B3"}),(0,s.jsx)(t.td,{children:"Amount of plants with a lot of contamination"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_Prod_B4"}),(0,s.jsx)(t.td,{children:"Plants produced per Cont. Level; Level B4"}),(0,s.jsx)(t.td,{children:"Amount of plants with severe contamination"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"TC2E_N_Plants_Prod_B5"}),(0,s.jsx)(t.td,{children:"Plants produced per Cont. Level; Level B5"}),(0,s.jsx)(t.td,{children:"Amount of plants with extreme contamination"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"infectioncontamination-definitions",children:"Infection/Contamination definitions"}),"\n",(0,s.jsx)(t.p,{children:"Within the system, the reasons/explanations of infection use acronyms. You can technically use these anything you want to, for the meaning is not set in stone. Nonetheless, we do have a standard for using these withing the company:"}),"\n",(0,s.jsx)(t.p,{children:"Clean Sterile - S0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 No contamination"}),"\n",(0,s.jsx)(t.p,{children:"Clean Sterile - S1\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Material is clean but some suspicious signs are seen for contamination"}),"\n",(0,s.jsx)(t.p,{children:"Contaminated B1\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Some clouds of bacteria in max 20% of the plants in a jar; Possible to mark with marker; Separate plants without mark during cutting in separate jars;"}),"\n",(0,s.jsx)(t.p,{children:"Contaminated B2\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Clouds of bacteria in more than 20% of the plants; Not possible anymore to mark; Plants not separated during cutting."}),"\n",(0,s.jsx)(t.p,{children:"Contaminated B3\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Bacteria all over in the medium or on the medium; Plants are still qualified for cutting."}),"\n",(0,s.jsx)(t.p,{children:"Contaminated B4 / B5 \xa0\xa0\xa0\xa0 Bad contamination and plants are not qualified anymore. Will be discarded as DG or DC."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"NOTE: it\u2019s possible that for some specific crops or based on directions from planners contamination level 4 and 5 are also used for production for specific reasons."})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:"LS\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Record broken jars (accidents)."}),"\n",(0,s.jsx)(t.p,{children:"DA \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Record contamination from initiations (AA). Use 1 label to scan and adjust the qty."}),"\n",(0,s.jsxs)(t.p,{children:["BFG\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Record S0 to B1/2/3.\r\n",(0,s.jsx)("small",{children:" If material is from S0 to B2 or B3 it has to be indicated on the worksheet in addition, for transfer to enter it during scanning. "})]}),"\n",(0,s.jsxs)(t.p,{children:["BF\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Record S1 to B1/2/3.\r\n",(0,s.jsx)("small",{children:" If material is from S1 to B2 or B3 is has to be indicated on the worksheet in addition, for transfer to enter it during scanning. "})]}),"\n",(0,s.jsx)(t.p,{children:"DR\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Record destroy rest material / old stock."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{children:"Bacterial Contamination"}),(0,s.jsx)(t.th,{children:"Fungus Contamination"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DG"}),(0,s.jsx)(t.td,{children:"S0 -> discard (if not special contamination like the pink bacteria)"}),(0,s.jsx)(t.td,{children:"S0, S1, C1,2,3 \xe0 discard (if not special contamination like a mite fungus outbreak)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DC"}),(0,s.jsx)(t.td,{children:"S1 or B1,2,3 -> discard (if not special contamination like the pink bacteria)"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"DS*"}),(0,s.jsx)(t.td,{children:"S0, S1, B1,2,3 -> discard When there is a special bacterial outbreak such as pink bacteria"}),(0,s.jsx)(t.td,{children:"S0, S1, B1,2,3 \xe0 discard. When there is a special fungus outbreak due to mites or otherwise"})]})]})]}),"\n",(0,s.jsx)("small",{children:" *This option DS can only be chosen after discussion and approval with lab manager. "}),"\n",(0,s.jsx)(t.p,{children:"Adjust S0 to S1 and adjust B1 to B2 or B3: This has to be indicated on the worksheet for transfer to enter the correct level"}),"\n",(0,s.jsx)(t.h2,{id:"and-more-so-much-more",children:"And more... So much more..."}),"\n",(0,s.jsx)(t.p,{children:"There is much more data the TC_Reg_Emp registers, which should be described when this documentation gets more attention."})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(6540);const d={},i=s.createContext(d);function r(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);