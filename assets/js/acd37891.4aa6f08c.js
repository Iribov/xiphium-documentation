"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6540],{2794:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=t(5893),i=t(1151);const s={title:"Xiphium 2024-W32 update",authors:["jim"]},o=void 0,a={permalink:"/xiphium-documentation/blog/2024/08/09/Xiphium-W32-Update/Index",editUrl:"https://github.com/Iribov/xiphium-documentation/edit/main/blog/2024-08-09-Xiphium-W32-Update/Index.md",source:"@site/blog/2024-08-09-Xiphium-W32-Update/Index.md",title:"Xiphium 2024-W32 update",description:"Here is the weekly update of (significant) changes made in Xiphium this week, extracted from Git(Hub).",date:"2024-08-09T00:00:00.000Z",formattedDate:"August 9, 2024",tags:[],readingTime:3.66,hasTruncateMarker:!0,authors:[{name:"Jim Kerver",title:"4D Developer @Iribov",url:"https://github.com/Jim-Kerver",imageURL:"https://github.com/Jim-Kerver.png",key:"jim"}],frontMatter:{title:"Xiphium 2024-W32 update",authors:["jim"]},unlisted:!1,prevItem:{title:"Xiphium 2024-W33 update",permalink:"/xiphium-documentation/blog/2024/08/16/Xiphium-W33-Update/Index"},nextItem:{title:"Xiphium 2024-W31 update",permalink:"/xiphium-documentation/blog/2024/08/02/Xiphium-W31-Update/Index"}},d={authorsImageUrls:[void 0]},l=[{value:"I declare to use #DECLARE",id:"i-declare-to-use-declare",level:2},{value:"Experiment",id:"experiment",level:2},{value:"Experiment Scan Menu",id:"experiment-scan-menu",level:3},{value:"Greenhouse",id:"greenhouse",level:2},{value:"Plant Code",id:"plant-code",level:2},{value:"Protocol Component",id:"protocol-component",level:2},{value:"TC Plan Cycle",id:"tc-plan-cycle",level:2},{value:"WBSO (ProjectGroup and Project2)",id:"wbso-projectgroup-and-project2",level:2},{value:"Order",id:"order",level:2},{value:"Maintenance app",id:"maintenance-app",level:2},{value:"Misc",id:"misc",level:2},{value:"Meme of the week",id:"meme-of-the-week",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Here is the weekly update of (significant) changes made in Xiphium this week, extracted from Git(Hub)."}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"These are interpretations of code read from the weekly changes from Git(Hub) and are therefore prone to errors."})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"i-declare-to-use-declare",children:"I declare to use #DECLARE"}),"\n",(0,r.jsxs)(n.p,{children:["4D has the new #DECLARE syntax to replace the classic $0, $1, $2 syntax for method parameters. In 4D 20R4 the #DECLARE replaces the need for the ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Compiler_"})})," methods. It is recommended to use the #DECLARE syntax for this reason but also, the declaration of the function is displayed in the status bar exactly as it is for 4D commands."]}),"\n",(0,r.jsx)(n.p,{children:"For this reason I propose that when making adjustments to a method, to also replace the classic parameter declarations with the #DECLARE syntax."}),"\n",(0,r.jsxs)(n.admonition,{type:"warning",children:[(0,r.jsx)(n.p,{children:'Keep in mind that the parameters declared with the #DECLARE are always initialized to their default data type (integer defaults to 0, Text defaults to "", etc.'}),(0,r.jsxs)(n.p,{children:["Checking if a parameter is passed to the method should be done using the ",(0,r.jsx)(n.strong,{children:"Count parameters"})," function and not the ",(0,r.jsx)(n.strong,{children:"Undefined()"})," function."]})]}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:"Check out the documentation and blog posts about #DECLARE:"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://developer.4d.com/docs/Concepts/parameters/#declaring-parameters",children:"Parameters | 4D Docs"})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://blog.4d.com/streamlined-method-parameter-declarations/",children:"Streamlined Method Parameter Declarations \u2013 4D Blog"})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://blog.4d.com/coder-friendly-syntax-for-class-functions-and-methods/",children:"Coder-friendly syntax for class functions and methods \u2013 4D Blog"})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"experiment",children:"Experiment"}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Exp_UpdateRecord"})})," has been modified to look for related documents using ORDA instead of classic queries."]}),"\n",(0,r.jsx)(n.p,{children:'Button Dit_Btn_CreateEmail7 has been added to form [Experiments]:"Exp_Detail". The button seems to export documents to a folder. It seems this is a test to export all treatment pictures at once (which has been a request form researchers).'}),"\n",(0,r.jsx)(n.h3,{id:"experiment-scan-menu",children:"Experiment Scan Menu"}),"\n",(0,r.jsx)(n.p,{children:"Creating Experiments and treatment via the scan menu did not result in fully 'filled' records.\r\nThe TCPG_ID and Activity Code are now added when creating a treatment. What more data needs to be added to these creation menus must be discussed."}),"\n",(0,r.jsx)(n.h2,{id:"greenhouse",children:"Greenhouse"}),"\n",(0,r.jsx)(n.p,{children:"The following fields have been added:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"GF_Plants_Sorted_Mini_1s"}),"\n",(0,r.jsx)(n.li,{children:"GF_Plants_Sorted_Small_1st"}),"\n",(0,r.jsx)(n.li,{children:"GF_Plants_Sorted_Medium_1st"}),"\n",(0,r.jsx)(n.li,{children:"GF_Plants_Sorted_Large_1st"}),"\n",(0,r.jsx)(n.li,{children:"GF_Plants_Sorted_Total_1st"}),"\n",(0,r.jsx)(n.li,{children:"Field_215"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"GF_ExportExcelReportResults"})})," now also includes the newly created fields in its export (except for 'Field-215')."]}),"\n",(0,r.jsx)(n.p,{children:'Button ExT_Btn_Label1 in form [Greenhouse_Field];"GF_List" has been modified. The following code has been added:'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4D",children:"If (([Greenhouse_Field]GF_Plants_Sorted_Mini_1st+[Greenhouse_Field]GF_Plants_Sorted_Small_1st+[Greenhouse_Field]GF_Plants_Sorted_Medium_1st+[Greenhouse_Field]GF_Plants_Sorted_Large_1st+[Greenhouse_Field]GF_Plants_Sorted_Total_1st)=0)\r\n\t[Greenhouse_Field]GF_Plants_Sorted_Mini_1st:=[Greenhouse_Field]GF_N_Plants_Sorting_Mini\r\n\t[Greenhouse_Field]GF_Plants_Sorted_Small_1st:=[Greenhouse_Field]GF_N_Plants_Sorting_Small\r\n\t[Greenhouse_Field]GF_Plants_Sorted_Medium_1st:=[Greenhouse_Field]GF_N_Plants_Sorting_Medium\r\n\t[Greenhouse_Field]GF_Plants_Sorted_Large_1st:=[Greenhouse_Field]GF_N_Plants_Sorting_Large\r\n\t[Greenhouse_Field]GF_Plants_Sorted_Total_1st:=[Greenhouse_Field]GF_N_Plants_Sorting_Total\r\nEnd if \n"})}),"\n",(0,r.jsx)(n.p,{children:"Basically, all the newly created 'Sorted_x_1st' fields are filled by their respective 'Sorting' fields if none of them were filled yet."}),"\n",(0,r.jsx)(n.h2,{id:"plant-code",children:"Plant Code"}),"\n",(0,r.jsx)(n.p,{children:"Field [Plant_Code]Plate_zzz_2 has been renamed to [Plant_Code]Pla_Item_ID_Extern.\r\nPlant Code has received several small updates this week to implement this 'new' field."}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Pla_UpdateRecord_Part_AmountLoc"})})," now excludes Deleted TCPA's when calculating the 'Plants Present'"]}),"\n",(0,r.jsx)(n.h2,{id:"protocol-component",children:"Protocol Component"}),"\n",(0,r.jsx)(n.p,{children:"Field [Protocol_Component]ProtComp_Date_Last_Sync_Import has been added."}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"ProtComp_DuplicateToLocation"})})," has been modified to set the [Prot_Component]ProtComp_Date_Last_Sync_Import to !00-00-00! for the duplicated record."]}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"ProtComp_SyncExportProtComp"})})," now sets the[Prot_Component]ProtComp_Date_Last_Sync_Import to ",(0,r.jsx)(n.strong,{children:"Current date"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"ProtComp_UpdateRecord"})})," now converts the saved ComCode to ComCode_Text"]}),"\n",(0,r.jsx)(n.h2,{id:"tc-plan-cycle",children:"TC Plan Cycle"}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"TCPC_CreateRecords_TCPA_TCPG"})})," now only copies remarks to TCPA when the TCPC remark is not empty and appends the TCPC remark to the current TCPA remark."]}),"\n",(0,r.jsxs)(n.admonition,{type:"warning",children:[(0,r.jsx)(n.p,{children:"The current implementation keeps appending the TCPC remark every time the method is executed!"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4D",children:'If ([TC_Plan_Cycle]TCPC_Remarks1#"")\r\n\t[TC_Plan_Action]TCPA_Remarks_Planning:=[TC_Plan_Action]TCPA_Remarks_Planning+" "+[TC_Plan_Cycle]TCPC_Remarks1\r\nEnd if \n'})}),(0,r.jsx)(n.p,{children:"Please check lines 78-80, 179-181 and 278-280 if this implementation is desirable."})]}),"\n",(0,r.jsx)(n.h2,{id:"wbso-projectgroup-and-project2",children:"WBSO (ProjectGroup and Project2)"}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"WBSO_Pro2_ConnectionDiffReport"})})," has been added. This method asks for 2 years and compares every ProjectGroup_Year - Project2_Year connection of these 2 years. This can be useful to see what has changed between 2 years."]}),"\n",(0,r.jsx)(n.h2,{id:"order",children:"Order"}),"\n",(0,r.jsx)(n.p,{children:'Buttons vScan_Btn_Close8 and vScan_Btn_Close9 have been added to form [Order]:"Ord_List". Both buttons seem to import Order records from the clipboard. There are some changes between the 2 buttons. It has probably been a test.'}),"\n",(0,r.jsx)(n.h2,{id:"maintenance-app",children:"Maintenance app"}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Web_MaintenanceController"})}),' has a new action called "maintenance" with method "GET". This option calls the method ',(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Web_MaintenanceGetEquipment"})}),", which returns details of the given equipment ID. Part of ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Web_MaintenanceGetEquipment"})})," has been abstracted to new method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Web_MaintenanceGetMaintenance"})}),". This method converts the equipment maintenance record to an object."]}),"\n",(0,r.jsxs)(n.p,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Web_MaintenanceSaveMaintenance"})})," has been modified to fix bugs and improve functionality."]}),"\n",(0,r.jsx)(n.h2,{id:"misc",children:"Misc"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"DateTime_ConvertfromISODate"})})," has been modified. There is now a check if the date and time pointers are not ",(0,r.jsx)(n.strong,{children:"Null"})," before assigning a value to them."]}),"\n",(0,r.jsxs)(n.li,{children:["Method ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"DateTime_ToISODate"})})," now accepts a placeholder for when the date would be !00-00-00!"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"meme-of-the-week",children:"Meme of the week"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{src:t(6690).Z+"",width:"817",height:"628"}),"\r\n",(0,r.jsx)(n.em,{children:"Meme of the week is NOT a recurrent theme and is only instantiated whenever I feel like it."})]})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},6690:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/dbFinalForm-a2a259408ba1fc0a758530114f0e39ba.jpg"},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var r=t(7294);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);