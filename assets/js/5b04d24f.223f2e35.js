"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9978],{1414:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var a=t(4848),s=t(8453);const r={sidebar_position:6},i="Analysis Datapoint",l={id:"Analysis/Analysis_DataPoint",title:"Analysis Datapoint",description:"Analysis Datapoint\xa0is\xa0the\xa0representation\xa0of\xa0the\xa0analysis\xa0performed\xa0after\xa0isolation. A Datapoint is\xa0therefore\xa0ALWAYS\xa0linked\xa0to\xa0an\xa0AnalysisIsolation. A datapoint\xa0contains\xa0all\xa0analysis\xa0results from a single instance and a single analysis. When a new analysis is done with the identical isolated DNA (AnalysisIsolation), a new DataPoint is made.",source:"@site/docs/Analysis/Analysis_DataPoint.md",sourceDirName:"Analysis",slug:"/Analysis/Analysis_DataPoint",permalink:"/xiphium-documentation/docs/Analysis/Analysis_DataPoint",draft:!1,unlisted:!1,editUrl:"https://github.com/Iribov/xiphium-documentation/edit/main/docs/Analysis/Analysis_DataPoint.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Analysis Isolation",permalink:"/xiphium-documentation/docs/Analysis/Analysis_Isolation"},next:{title:"Analysis Overview",permalink:"/xiphium-documentation/docs/Analysis/Analysis_Overview"}},d={},o=[{value:"Definitions",id:"definitions",level:2},{value:"1. Pre-Processed Data",id:"1-pre-processed-data",level:2},{value:"2. Check Parameters",id:"2-check-parameters",level:2},{value:"3. Processed Data",id:"3-processed-data",level:2},{value:"4. End result",id:"4-end-result",level:2},{value:"Data structures",id:"data-structures",level:2},{value:"Pre-Processed Data",id:"pre-processed-data",level:3},{value:"qPCR",id:"qpcr",level:4},{value:"FCM",id:"fcm",level:4},{value:"PCR",id:"pcr",level:4},{value:"Processed Data",id:"processed-data",level:3},{value:"FCM",id:"fcm-1",level:4},{value:"Examples",id:"examples",level:2},{value:"FCM",id:"fcm-2",level:3},{value:"Pre-Processed FCM data:",id:"pre-processed-fcm-data",level:4},{value:"Check Parameters FCM Ploidy Data:",id:"check-parameters-fcm-ploidy-data",level:4},{value:"Processed FCM Ploidy Data:",id:"processed-fcm-ploidy-data",level:4},{value:"Check Parameters FCM DNA-Amount",id:"check-parameters-fcm-dna-amount",level:4},{value:"Processed Data FCM DNA-Amount",id:"processed-data-fcm-dna-amount",level:4},{value:"qPCR",id:"qpcr-1",level:3},{value:"qPCR Pre-Processed data",id:"qpcr-pre-processed-data",level:4}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"analysis-datapoint",children:"Analysis Datapoint"}),"\n",(0,a.jsxs)(n.p,{children:["Analysis Datapoint\xa0is\xa0the\xa0representation\xa0of\xa0the\xa0analysis\xa0performed\xa0after\xa0isolation. A Datapoint is\xa0therefore\xa0ALWAYS\xa0linked\xa0to\xa0an\xa0",(0,a.jsx)(n.a,{href:"/xiphium-documentation/docs/Analysis/Analysis_Isolation",children:"Analysis_Isolation"}),". A datapoint\xa0contains\xa0all\xa0analysis\xa0results from a single instance and a single analysis. When a new analysis is done with the identical isolated DNA (",(0,a.jsx)(n.a,{href:"/xiphium-documentation/docs/Analysis/Analysis_Isolation",children:"Analysis_Isolation"}),"), a new DataPoint is made."]}),"\n",(0,a.jsx)(n.p,{children:"Most of the raw data of a datapoint is stored inside an object field. We maintain different structures inside of these object fields depending on the type of analysis done."}),"\n",(0,a.jsx)(n.h2,{id:"definitions",children:"Definitions"}),"\n",(0,a.jsx)(n.p,{children:"Because Data from different tests (FCM, PCR, qPCR etc.) have wildly different formats and requirements, it\u2019s impossible/impractical to structure this properly for a relational database. Therefore, an unstructured approach is necessary: Object Fields!"}),"\n",(0,a.jsx)(n.p,{children:"Inside an object field, any structure can be used. This can be different per record. And although this sounds great from a storage perspective, how will you ever make a report out of this \u2018ever\u2019 changing structure?"}),"\n",(0,a.jsx)(n.p,{children:"To properly make use of object fields, some structure has to be predefined. However, this structure can be different for every type of analysis; exactly what we need."}),"\n",(0,a.jsx)(n.p,{children:"For datapoints, we will make the distinction between 4 types of data:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Pre-Processed Data"}),"\n",(0,a.jsx)(n.li,{children:"Check Parameters"}),"\n",(0,a.jsx)(n.li,{children:"Processed Data"}),"\n",(0,a.jsx)(n.li,{children:"End result"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"1-pre-processed-data",children:"1. Pre-Processed Data"}),"\n",(0,a.jsx)(n.p,{children:"\u2018Pre-Processed Data\u2019 is referring to data that is not/partially processed. In our case, this means data that is generated by a machine/software that has not been scored according to check parameters."}),"\n",(0,a.jsx)(n.h2,{id:"2-check-parameters",children:"2. Check Parameters"}),"\n",(0,a.jsx)(n.p,{children:"The \u2018pre-processed\u2019 data is usually processed according to certain parameters. It would be useful to have the parameters used to process the data, saved in the system as well. There might be a better place than Datapoints itself (from a data duplication standpoint), but having it in the datapoint is very consistent across all types of analyses."}),"\n",(0,a.jsx)(n.h2,{id:"3-processed-data",children:"3. Processed Data"}),"\n",(0,a.jsx)(n.p,{children:"\u2018Processed Data\u2019 is data that has been processed, adjusted and interpreted by a human or process with the help of the \u2018Check Parameters\u2019."}),"\n",(0,a.jsx)(n.h2,{id:"4-end-result",children:"4. End result"}),"\n",(0,a.jsx)(n.p,{children:"Most of our tests have a clear conclusion after processing the data: \u2018Positive\u2019, \u2018Negative\u2019, \u2018Diploid\u2019, \u20186 pg\u2019, \u2018True\u2019 etc. This will be the result that will be used in a final report. This result is stored in a text field called 'End result'."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"data-structures",children:"Data structures"}),"\n",(0,a.jsx)(n.p,{children:"In order to store the different kinds of data, a data structure has to be defined. When this data structure is always used, automated data aggregations can be made."}),"\n",(0,a.jsx)(n.h3,{id:"pre-processed-data",children:"Pre-Processed Data"}),"\n",(0,a.jsx)(n.h4,{id:"qpcr",children:"qPCR"}),"\n",(0,a.jsx)(n.p,{children:"Collection of objects with the keys:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Fluophor [Alpha?]"}),"\n",(0,a.jsx)(n.li,{children:"RFU [Real]"}),"\n",(0,a.jsx)(n.li,{children:"Ct (of Cq?) [Real]"}),"\n",(0,a.jsx)(n.li,{children:"S-Curve [Boolean]"}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"fcm",children:"FCM"}),"\n",(0,a.jsx)(n.p,{children:"Object \u2018FCM\u2019 with a Collection of objects with the keys:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Mean"}),"\n",(0,a.jsx)(n.li,{children:"Count"}),"\n",(0,a.jsx)(n.li,{children:"CV"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Maybe change \u2018FCM\u2019 with the parameter that is used (\u2018FL1\u2019)? Will be less consistent but may be better for the added information."}),"\n",(0,a.jsx)(n.h4,{id:"pcr",children:"PCR"}),"\n",(0,a.jsx)(n.p,{children:"Collection of objects with the keys:"}),"\n",(0,a.jsx)(n.h3,{id:"processed-data",children:"Processed Data"}),"\n",(0,a.jsx)(n.h4,{id:"fcm-1",children:"FCM"}),"\n",(0,a.jsx)(n.p,{children:"Percentage of count in ploidy"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"C1"}),"\n",(0,a.jsx)(n.li,{children:"C2"}),"\n",(0,a.jsx)(n.li,{children:"C3"}),"\n",(0,a.jsx)(n.li,{children:"Etc."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.h3,{id:"fcm-2",children:"FCM"}),"\n",(0,a.jsx)(n.h4,{id:"pre-processed-fcm-data",children:"Pre-Processed FCM data:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:"{\r\n\xa0 \u201cFCM\u201d: [\r\n\xa0\xa0\xa0 {\r\n\xa0\xa0\xa0\xa0\xa0 \u201cmean\u201d: 12,\r\n\xa0\xa0\xa0\xa0\xa0 \u201ccount\u201d: 375,\r\n\xa0\xa0\xa0\xa0\xa0 \u201ccv\u201d: 0.06\r\n\xa0\xa0\xa0 },\r\n\xa0\xa0\xa0 {\r\n\xa0\xa0\xa0\xa0\xa0 \u201cmean\u201d: 24,\r\n\xa0\xa0\xa0\xa0\xa0 \u201ccount\u201d: 245,\r\n\xa0\xa0\xa0\xa0\xa0 \u201ccv\u201d: 0.09\r\n\xa0\xa0\xa0 }\r\n\xa0 ]\r\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"check-parameters-fcm-ploidy-data",children:"Check Parameters FCM Ploidy Data:"}),"\n",(0,a.jsx)(n.p,{children:"The minimum and maximum values of scoring whether a peak is haploid, diploid, etc."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:"{\r\n\t\u201cC1\u201d: [2.5, 7.5],\r\n\t\u201cC2\u201d: [7.5, 12.75],\r\n\t\u201cC3\u201d: [12.75, 17],\r\n\t\u201cC4\u201d: [17, 24],\r\n\t\u201cC6\u201d: [17, 24],\r\n\t\u201cC8\u201d: [34, 48],\r\n\t\u201cC12\u201d: [48, 64],\r\n\t\u201cC16\u201d: [64, 96],\r\n\t\u201cC24\u201d: [96, 128],\r\n\t\u201cC32\u201d: [128, 192],\r\n\t\u201cC48\u201d: [192, 256],\r\n\t\u201cC64\u201d: [256, 512],\r\n\t\u201cC128\u201d: [512, 700]\r\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"processed-fcm-ploidy-data",children:"Processed FCM Ploidy Data:"}),"\n",(0,a.jsx)(n.p,{children:"Percentages of count of the diploid, tetraploid, etc. peaks."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:"{\r\n\xa0 \u201cC2\u201d: 0.85,\r\n\xa0 \u201cC4\u201d: 0.15\r\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"check-parameters-fcm-dna-amount",children:"Check Parameters FCM DNA-Amount"}),"\n",(0,a.jsx)(n.p,{children:"parameters used to dermine DNA_Amount of a sample compared to the internal control."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:"{\r\n\r\n\u201cDNA-Amount\u201d:\r\n\t{\r\n\t\t\u201cRange\u201d: [180, 220],\r\n\t\t\u201cForbidden_RM\u201d: [[0.498, 0.562], [0.970, 1.030], [1.940, 2.060], [3.880, 4.120]],\r\n\t\t\u201cReference_Factor\u201d: 1.060,\r\n\t\t\u201cPL_Min\u201d: 1.350,\r\n\t\t\u201cPL_Max\u201d: 1.450,\r\n\t\t\u201cCount_Limits\u201d: {\u201cMinimum_Perc\u201d: 2, \u201cMinimum\u201d: 30}\r\n\t}\r\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"processed-data-fcm-dna-amount",children:"Processed Data FCM DNA-Amount"}),"\n",(0,a.jsx)(n.p,{children:"[Needs to be defined]"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"qpcr-1",children:"qPCR"}),"\n",(0,a.jsx)(n.h4,{id:"qpcr-pre-processed-data",children:"qPCR Pre-Processed data"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:"{\r\n\t\u201cCy5\u201d:\r\n\t\t[\r\n\t\t\u201cCt\u201d: 24,\r\n\t\t\u201cSample\u201d: \u201c2301001-001\u201d\r\n\t\t\u201cWell\u201d: \u201cA01\u201d\r\n\t\t\u201cTarget\u201d: \u201c\u201d\r\n\t\t\u201cContent\u201d: \u201cUnkn\u201d,\r\n\t\t\u201cSQ\u201d: \u201c\u201d\r\n\t\t],\r\n\t\u201cHEX\u201d:\r\n\t[\r\n\t\t\u201cCt\u201d: 21,\r\n\t\t\u201cSample\u201d: \u201c2301001-001\u201d\r\n\t\t\u201cWell\u201d: \u201cA01\u201d\r\n\t\t\u201cTarget\u201d: \u201c\u201d\r\n\t\t\u201cContent\u201d: \u201cUnkn\u201d,\r\n\t\t\u201cSQ\u201d: \u201c\u201d\r\n\t],\r\n\t\u201cFile Name\u201d: \u201c28-058-02.pcrd\u201d,\r\n\t\u201cCreated By User\u201d: \u201cadmin\u201d,\r\n\t\u201cNotes\u201d: \u201c\u201d,\r\n\t\u201cID\u201d: \u201c\u201d,\r\n\t\u201cRun started\u201d: \u201c02/27/2023 13:29:47 UTC\u201d,\r\n\t\u201cRun Ended\u201d: \u201c02/27/2023 14:56:42 UTC\u201d,\r\n\t\u201cSample Vol\u201d: 6,\r\n\t\u201cLid Temp\u201d: 105,\r\n\t\u201cProtocol File Name\u201d: \u201cRT-qPCR 60(15)-15-40x.prcl\u201d,\r\n\t\u201cPlate Setup File Name\u201d: \u201cQuickPlate_96 wells_All Channels.pltd\u201d,\r\n\t\u201cBase Serial Number\u201d: \u201cCT016622\u201d,\r\n\t\u201cOptical Head Serial Number\u201d: \u201c785BR12305\u201d,\r\n\t\u201cCFX Maestro Version\u201d: \u201c4.1.2433.1219.\u201d\r\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var a=t(6540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);